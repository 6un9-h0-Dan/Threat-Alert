AWSTemplateFormatVersion: '2010-09-09'
Description: 'stackArmor threatAlert - template to launch VPC and ThreatAlert/ NOTE:-
  Subscribe to CIS Amazon linux Benchmark v2.0.0-level1 '
Parameters:
  VPCCidr:
    Type: String
  AvailabilityZones: 
    Type: CommaDelimitedList
  SonarQubeSG:
    Type: String
  SonarAMI:
    Type: String 
  SonarType:
    Type: String 
  KeyNameN: 
    Type: "AWS::EC2::KeyPair::KeyName"
  ThreatAlertSN1:
    Type: String    
  ThreatAlertSN2:
    Type: String
  ThreatAlertGSSProfile:
    Type: String
  OpsAMI: 
    Type: String
  OpsType: 
    Type: String
  OpsAlertSG:
    Type: String
  NessusAMIP: 
    Type: String
  NessusType: 
    Type: String
  NessusSG:
    Type: String
  OktaAMIP: 
    Type: String
  OktaType: 
    Type: String
  OktaSG:
    Type: String
  JiraAMIP:
    Type: String
  JiraType:
    Type: String
  JiraSG:
    Type: String
  AcunetixAMIP:
    Type: String
  AcunetixType:
    Type: String
  AcunetixSG:
    Type: String
  DBISubnet1:
    Type: String
  DBISubnet2: 
    Type: String


Resources:

  SonarQubeServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref 'SonarAMI'
      InstanceType: !Ref 'SonarType'
      KeyName: !Ref 'KeyNameN'
      SubnetId: !Ref 'ThreatAlertSN1'
      SecurityGroupIds: 
        - !Ref 'JiraSG'
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            Encrypted: True     
      Tags:
        - Key: Name
          Value: SonarQube-Server
  RecoveryAlarmSonarQube:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Trigger a recovery when instance status check fails for 15
        consecutive minutes.
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Minimum
      Period: '60'
      EvaluationPeriods: '15'
      ComparisonOperator: GreaterThanThreshold
      Threshold: '0'
      AlarmActions: [ !Sub "arn:${AWS::Partition}:automate:${AWS::Region}:ec2:recover" ]
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: SonarQubeServer

  CPUAlarmSonarQube:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: CPU alarm for my instance
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '3'
      Threshold: '90'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: SonarQubeServer

  OktaServer: 
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref 'OktaAMIP'
      InstanceType: !Ref 'OktaType'
      KeyName: !Ref 'KeyNameN'
      SecurityGroupIds:
        - !Ref 'OktaSG'
      SubnetId: !Ref 'ThreatAlertSN1'
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            Encrypted: True     
        - DeviceName: /dev/xvda
          Ebs:
            Encrypted: True
            VolumeSize: 50
      Tags:
        - Key: Name
          Value: Okta-Server 

  OpsAlertServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref 'OpsAMI'
      InstanceType: !Ref 'OpsType'
      KeyName: !Ref 'KeyNameN'
      SecurityGroupIds:
        - !Ref 'OpsAlertSG'
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            Encrypted: True     
      SubnetId: !Ref 'ThreatAlertSN2'
      Tags:
        - Key: Name
          Value: OpsAlert-Server

  NessusServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref 'NessusAMIP'
      InstanceType: !Ref 'NessusType'
      KeyName: !Ref 'KeyNameN'
      SecurityGroupIds:
        - !Ref 'NessusSG'
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            Encrypted: True     
      SubnetId: !Ref 'ThreatAlertSN2'
      Tags:
        - Key: Name
          Value: Nessus-Server


  CPUAlarmOpsAlert:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: CPU alarm for my instance
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '3'
      Threshold: '90'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: OpsAlertServer


  RecoveryAlarmOpsAlert:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Trigger a recovery when instance status check fails for 15
        consecutive minutes.
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Minimum
      Period: '60'
      EvaluationPeriods: '15'
      ComparisonOperator: GreaterThanThreshold
      Threshold: '0'
      AlarmActions: [ !Sub "arn:${AWS::Partition}:automate:${AWS::Region}:ec2:recover" ]
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: OpsAlertServer

  JiraServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref 'JiraAMIP'
      InstanceType: !Ref 'JiraType'
      KeyName: !Ref 'KeyNameN'
      SubnetId: !Ref 'ThreatAlertSN2'
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            Encrypted: True     
        - DeviceName: /dev/xvda
          Ebs:
            Encrypted: True
            VolumeSize: 50
      SecurityGroupIds: 
        - !Ref 'JiraSG'
      Tags:
        - Key: Name
          Value: Jira-Server

  AcunetixServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref 'AcunetixAMIP'
      InstanceType: !Ref 'AcunetixType'
      KeyName: !Ref 'KeyNameN'
      SubnetId: !Ref 'ThreatAlertSN1'
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            Encrypted: True     
        - DeviceName: /dev/xvda
          Ebs:
            Encrypted: True
            VolumeSize: 50
      SecurityGroupIds: 
        - !Ref 'AcunetixSG'
      Tags:
        - Key: Name
          Value: Acunetix-Server