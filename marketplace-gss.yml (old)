AWSTemplateFormatVersion: '2010-09-09'
Description: 'stackArmor threatAlert - template to launch VPC and ThreatAlert/ NOTE:-
  Subscribe to CIS Amazon linux Benchmark v2.0.0-level1 '
Parameters:
  AvailabilityZones:
    Description: 'List of Availability Zones to use for the subnets in the VPC. Note:
        The logical order is preserved.'
    Type: List<AWS::EC2::AvailabilityZone::Name>

  DomainAdminPassword:
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    Description: Password for the domain admin user. Must be at least 8 characters
      containing letters, numbers and symbols
    MaxLength: '32'
    MinLength: '8'
    NoEcho: 'true'
    Type: String
  DomainAdminUser:
    AllowedPattern: '[a-zA-Z0-9]*'
    Default: StackAdmin
    Description: User name for the Domain Administrator. This is separate from the
      default "Administrator" account
    MaxLength: '25'
    MinLength: '5'
    Type: String
  DomainDNSName:
    Description: Fully qualified domain name (FQDN) e.g. example.com
    Type: String
    Default: example.com
    MinLength: '2'
    MaxLength: '255'
    AllowedPattern: '[a-zA-Z0-9\-]+\..+'

  DomainNetBIOSName:
    AllowedPattern: '[a-zA-Z0-9\-]+'
    Default: example
    Description: NetBIOS name of the domain (up to 15 characters) for users of earlier
      versions of Windows e.g. EXAMPLE
    MaxLength: '15'
    MinLength: '1'
    Type: String

  RDGWInstanceType:
    Description: Amazon EC2 instance type for the Remote Desktop Gateway instances
    Type: String
    Default: t2.large
    AllowedValues:
      - t2.large
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge

  NumberOfAZs:
    AllowedValues:
      - '2'
      - '3'
      - '4'
    Default: '2'
    Description: Number of Availability Zones to use in the VPC. This must match your
      selections in the list of Availability Zones parameter.
    Type: String

  VPCSubnetCidrBlock:
    Description: Enter VPC CIDR Block.
    Type: String
    Default: 10.0.0.0/16
    MinLength: '10'
    MaxLength: '18'

  SubnetCidrBlock1:
    Description: Enter Public Subnet 1 CIDR Block.
    Type: String
    Default: 10.0.0.0/24
    MinLength: '10'
    MaxLength: '18'

  SubnetCidrBlock2:
    Description: Enter Private Subnet 1 CIDR Block.
    Type: String
    Default: 10.0.1.0/24
    MinLength: '10'
    MaxLength: '18'

  DatabaseSubnet1:
    Description: Select a private subnet for the RDS database.  Must be a private
      subnet contained the in VPC chosen above.
    Type: String
    Default: 10.0.30.0/26
    MinLength: '10'
    MaxLength: '18'
    ConstraintDescription: RDS Subnet Groups must be comprised of 2 subnets in seperat
      availability zones within the specified VPC for deploying this template
  DatabaseSubnet2:
    Description: Select a second private subnet for the RDS database.  Must be a private
      subnet contained the in VPC chosen above.
    Type: String
    Default: 10.0.31.0/26
    MinLength: '10'
    MaxLength: '18'
    ConstraintDescription: RDS Subnet Groups must be comprised of 2 subnets in seperate availability zones within the specified VPC for deploying this template

  DSSubnet1:
    Description: Select a private subnet for the RDS database.  Must be a private
      subnet contained the in VPC chosen above.
    Type: String
    Default: 10.0.10.0/27
    MinLength: '10'
    MaxLength: '18'
    ConstraintDescription: Directory Service Subnet Group must be comprised of 2 subnets in seperat
      availability zones within the specified VPC for deploying this template
  DSSubnet2:
    Description: Select a second private subnet for the RDS database.  Must be a private
      subnet contained the in VPC chosen above.
    Type: String
    Default: 10.0.11.0/27
    MinLength: '10'
    MaxLength: '18'
    ConstraintDescription: Directory Service Subnet Group must be comprised of 2 subnets in seperate availability zones within the specified VPC for deploying this template

  ThreatAlertAMI:
    Description: AMI ID of Threat Alert
    Type: AWS::EC2::Image::Id
    Default: ami-02a867cfe4470dd2b
  SonarQubeAMI:
    Description: AMI ID of SonarQube
    Type: AWS::EC2::Image::Id
    Default: ami-07572d28e17561a2a
  SplunkAMI:
    Description: AMI ID of Splunk
    Type: String
    Default: ami-004e96942c32fc74f
  OpsAlertAMI:
    Description: AMI ID of OpsAlert
    Type: AWS::EC2::Image::Id
    Default: ami-0b4ee4185073ba4b5
  RapidSSPAMI:
    Description: AMI of RapidSSP
    Type: String
    Default: ami-0d7dd814810438c65

  ThreatAlertInstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
    ConstraintDescription: must be a valid EC2 instance type.

  OpsAlertInstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
    ConstraintDescription: must be a valid EC2 instance type.

  RapidSSPInstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
    ConstraintDescription: must be a valid EC2 instance type.

  SonarQubeInstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
    ConstraintDescription: must be a valid EC2 instance type.

  SplunkInstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
    ConstraintDescription: must be a valid EC2 instance type.

  MicrosoftADPW:
    NoEcho: true
    Description: The database password for Directory Service
    Type: String
    MinLength: 1
    MaxLength: 41
    AllowedPattern: ^[a-zA-Z0-9]*$

  KeyPair:
    Description: EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName

  RDGWCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: Allowed CIDR Block for external access to the Remote Desktop Gateways
    Type: String

  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-microsoft-rdgateway/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  DSMS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-trendmicro-deepsecurity/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  DSMAdminName:
    Default: MasterAdmin
    Description: The Deep Security Manager administrator username for Web Console
      Access.
    Type: String
    MinLength: 1
    MaxLength: 16
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and contain only alphanumeric
      characters. Min length 1, max length 16
  DSMAdminPass:
    NoEcho: true
    Description: The Deep Security Manager administrator password. Must be 8-41 characters
      long and can only contain alphanumeric characters or the following special characters
      !^*-_+
    Type: String
    MinLength: 8
    MaxLength: 41
    AllowedPattern: '[a-zA-Z0-9!^*\-_+]*'
    ConstraintDescription: Can only contain alphanumeric characters or the following
      special characters !^*-_+ Min length 8, max length 41
  DSMProtectedInstances:
    Description: Select how many instances would you like to protect.
    Type: String
    AllowedValues:
    - 1-100
    - 101-500
    - 501-1000
    - 1001-2000

Mappings:

  AWSAMIRegionMap:
    AMI:
      WS2016FULLBASE: Windows_Server-2016-English-Full-Base-2019.02.13
    ap-northeast-1:
      WS2016FULLBASE: ami-0644ce62fdce33d7a
    ap-northeast-2:
      WS2016FULLBASE: ami-0b06750f7ff166ef5
    ap-south-1:
      WS2016FULLBASE: ami-0be56865bcf08da0d
    ap-southeast-1:
      WS2016FULLBASE: ami-0611ad6dad5ec3418
    ap-southeast-2:
      WS2016FULLBASE: ami-0148c6490018d612f
    ca-central-1:
      WS2016FULLBASE: ami-09b27c4b76404544f
    eu-central-1:
      WS2016FULLBASE: ami-083c458e2cc1adc40
    eu-west-1:
      WS2016FULLBASE: ami-0e60ba06451c1b981
    eu-west-2:
      WS2016FULLBASE: ami-0186531b707ced2ef
    eu-west-3:
      WS2016FULLBASE: ami-04f6c3a108e0d348b
    sa-east-1:
      WS2016FULLBASE: ami-05c6c992668058be2
    us-east-1:
      WS2016FULLBASE: ami-0d41aee8a57fdb850
    us-east-2:
      WS2016FULLBASE: ami-08b4a0f6e106c1dba
    us-west-1:
      WS2016FULLBASE: ami-0f825806081c4725c
    us-west-2:
      WS2016FULLBASE: ami-0af80d239cc063c12
    us-gov-west-1:
      WS2016FULLBASE: ami-6bd2bd0a

  ThreatAlertAMIRegionMap:
    AMI:
      ThreatAlertAMI: Windows_Server-2016-English-Full-Base-2019.02.13
    us-east-1:
      ThreatAlertAMI: ami-02a867cfe4470dd2b
    us-east-2:
      ThreatAlertAMI: ami-08b4a0f6e106c1dba
    us-west-1:
      ThreatAlertAMI: ami-0f825806081c4725c
    us-west-2:
      ThreatAlertAMI: ami-0af80d239cc063c12
    us-gov-west-1:
      ThreatAlertAMI: ami-5ba3d63a

  OpsAlertAMIRegionMap:
    AMI:
        OpsAlertAMI: Windows_Server-2016-English-Full-Base-2019.02.13
    us-east-1:
      OpsAlertAMI: ami-0b4ee4185073ba4b5
    us-east-2:
      OpsAlertAMI: ami-08b4a0f6e106c1dba
    us-west-1:
      OpsAlertAMI: ami-0f825806081c4725c
    us-west-2:
      OpsAlertAMI: ami-0af80d239cc063c12
    us-gov-west-1:
      OpsAlertAMI: ami-5ba3d63a

  SplunkAMIRegionMap:
    AMI:
        SplunkAMI: Windows_Server-2016-English-Full-Base-2019.02.13
    us-east-1:
      SplunkAMI: ami-0bf148826ef491d16
    us-east-2:
      SplunkAMI: ami-08b4a0f6e106c1dba
    us-west-1:
      SplunkAMI: ami-0f825806081c4725c
    us-west-2:
      SplunkAMI: ami-0af80d239cc063c12
    us-gov-west-1:
      SplunkAMI: ami-7fa9dc1e

  Region2Principal:
    us-east-1:
      "EC2Principal": "ec2.amazonaws.com"
    us-west-2:
      "EC2Principal": "ec2.amazonaws.com"
    us-west-1:
      "EC2Principal": "ec2.amazonaws.com"
    us-gov-west-1:
      "EC2Principal": "ec2.amazonaws.com"


Conditions:
  GovCloudCondition: !Equals
    - !Ref 'AWS::Region'
    - us-gov-west-1
Resources:

  ThreatAlertDHCP:
    Type: AWS::EC2::DHCPOptions
    Properties:
      DomainName: "threatalert.stackarmor.com"
      DomainNameServers: !GetAtt ThreatAlertDirectory.DnsIpAddresses
      NtpServers:
        - 129.6.15.28
        - 129.6.15.29
    DependsOn: ThreatAlertDirectory

  ThreatAlertDHCPOptionsAssociation:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties:
      VpcId:
        Ref: ThreatAlertVPC
      DhcpOptionsId:
        Ref: ThreatAlertDHCP

  ThreatAlertHostProfile:
      Type: AWS::IAM::InstanceProfile
      Properties:
        Roles:
          - DirectoryEC2SSMRole
        InstanceProfileName: DirectoryEC2SSMRole
      DependsOn: ThreatAlertEC2SSMRole
  ThreatAlertEC2SSMRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - ec2.amazonaws.com
              Action:
                - sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
        RoleName: DirectoryEC2SSMRole

  RemoteDesktopGatewaySG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable RDP access from the Internet
      GroupName: Bastion Server Security Group
      VpcId: !Ref 'ThreatAlertVPC'
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '3389'
        ToPort: '3389'
        CidrIp: !Ref 'RDGWCIDR'
      - IpProtocol: icmp
        FromPort: '-1'
        ToPort: '-1'
        CidrIp: !Ref 'RDGWCIDR'

  BastionServer:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::Cloudformation::Init:
        configSets:
          config:
            - setup
            - installADDS
            - finalize
        setup:
          files:
            c:\cfn\cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
            c:\cfn\hooks.d\cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.BastionServer.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --configsets full_install --region ${AWS::Region}
          services:
            windows:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - c:\cfn\cfn-hup.conf
                  - c:\cfn\hooks.d\cfn-auto-reloader.conf
      
        
        installADDS:
          commands:
            1-install-prereqs:
              command: powershell.exe -Command "Install-WindowsFeature RSAT-AD-Powershell, RSAT-ADDS-Tools;"
              waitAfterCompletion: '0'
            
            2-import-module:
              command: powershell.exe -ExecutionPolicy Bypass -Command Import-Module ActiveDirectory
            
            3-create-adminuser: 
              command: !Join
              - '' 
              - - powershell.exe -ExecutionPolicy Bypass -Command 'YO' > C:\Users\public\output.txt             
                  
              waitAfterCompletion: '0'
           
          
        finalize:
            1-signal-success:
              command: powershell.exe -Command "Write-AWSQuickStartStatus"
              waitAfterCompletion: '0'

    Properties:
      ImageId:
        Fn::FindInMap:
        - "AWSAMIRegionMap"
        - Ref: "AWS::Region"
        - "WS2016FULLBASE"
      InstanceType: t2.medium
      SsmAssociations: 
        -
          DocumentName: 
            Ref: "ThreatAlertSSMDoc"
          
      KeyName: !Ref 'KeyPair'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "<script>\n"
            - 'cfn-init.exe -v -c config -s '
            - !Ref 'AWS::StackId'
            - ' -r BastionServer'
            - ' --region '
            - !Ref 'AWS::Region'
            - "\n"
            - "</script>\n"
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - Ref: "RemoteDesktopGatewaySG"
          SubnetId:
            Ref: 'ThreatAlertSN1'
      IamInstanceProfile: !Ref 'ThreatAlertHostProfile'
      Tags:
        - Key: Name
          Value: Bastion-Server
    DependsOn: [ThreatAlertDirectory,ThreatAlertSSMDoc]

  ThreatAlertVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref 'VPCSubnetCidrBlock'
      Tags:
        - Key: Name
          Value: threatAlert-vpc

  ThreatAlertInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: ThreatAlertInternetGateway

  ThreatAlertVPCGatewayAttach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref 'ThreatAlertInternetGateway'
      VpcId: !Ref 'ThreatAlertVPC'
    DependsOn:
      - ThreatAlertVPC
      - ThreatAlertInternetGateway

  ThreatAlertSN1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'ThreatAlertVPC'
      CidrBlock: !Ref 'SubnetCidrBlock1'
      Tags:
        - Key: Name
          Value: threatAlert-subnet-01
    DependsOn: ThreatAlertVPC

  ThreatAlertSubnetSelection:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'ThreatAlertVPC'
      CidrBlock: !Ref 'SubnetCidrBlock2'
      Tags:
        - Key: Name
          Value: threatAlert-subnet-02
    DependsOn: ThreatAlertVPC

  ThreatAlertRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'ThreatAlertVPC'
      Tags:
        - Key: Name
          Value: ThreatAlert-RouteTable1


  threatAlertPrivateRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'ThreatAlertVPC'
      Tags:
        - Key: Name 
          Value: ThreatAlert-Private-RouteTable

  ThreatAlertRoute1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: '0.0.0.0/0'
      RouteTableId: !Ref 'ThreatAlertRT'
      GatewayId: !Ref 'ThreatAlertInternetGateway'
    DependsOn:
      - ThreatAlertInternetGateway
      - ThreatAlertRT
  
  ThreatAlertRoute2:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: '0.0.0.0/0'
      RouteTableId: !Ref 'threatAlertPrivateRT'
      NatGatewayId: !Ref 'ThreatAlertprodNatGateway'
    DependsOn:
      - ThreatAlertprodNatGateway
      - threatAlertPrivateRT

  ThreatAlertSubRoute:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'ThreatAlertRT'
      SubnetId: !Ref 'ThreatAlertSN1'

  ThreatAlertSubRoute2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'threatAlertPrivateRT'
      SubnetId: !Ref 'ThreatAlertSubnetSelection'

  DBISubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'ThreatAlertVPC'
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""      
      CidrBlock: !Ref 'DatabaseSubnet1'
      Tags:
        - Key: Name
          Value: ThreatAlert-dbsubnet-01
    DependsOn: ThreatAlertVPC
  DBISubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'ThreatAlertVPC'
      CidrBlock: !Ref 'DatabaseSubnet2'
      AvailabilityZone: 
        Fn::Select: 
          - 1
          - Fn::GetAZs: "" 
      Tags:
        - Key: Name
          Value: threatAlert-dbsubnet-02
    DependsOn: ThreatAlertVPC
  DBISubnetRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'ThreatAlertVPC'
      Tags:
        - Key: Name
          Value: ThreatAlert-DB-RouteTable1

  DBIRoute1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: '0.0.0.0/0'
      RouteTableId: !Ref 'DBISubnetRT'
      GatewayId: !Ref 'ThreatAlertInternetGateway'
    DependsOn:
      - ThreatAlertInternetGateway
      - ThreatAlertRT
  DBISubRoute:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'DBISubnetRT'
      SubnetId: !Ref 'DBISubnet1'
  DBISubRoute2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'DBISubnetRT'
      SubnetId: !Ref 'DBISubnet2'

  DirectorySubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'ThreatAlertVPC'
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: !Ref 'DSSubnet1'
      Tags:
        - Key: Name
          Value: ThreatAlert-Directory-subnet-01
    DependsOn: ThreatAlertVPC
  DirectorySubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      VpcId: !Ref 'ThreatAlertVPC'
      CidrBlock: !Ref 'DSSubnet2'
      Tags:
        - Key: Name
          Value: threatAlert-Directory-subnet-02

    DependsOn: ThreatAlertVPC
  DSSubnetRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'ThreatAlertVPC'
      Tags:
        - Key: Name
          Value: ThreatAlert-Directory-RouteTable1

  DSRoute1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: '0.0.0.0/0'
      RouteTableId: !Ref 'DSSubnetRT'
      NatGatewayId:
        Ref: 'ThreatAlertprodNatGateway'

  DSSubRoute:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'DSSubnetRT'
      SubnetId: !Ref 'DirectorySubnet1'
  DSSubRoute2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'DSSubnetRT'
      SubnetId: !Ref 'DirectorySubnet2'

  ThreatAlertDirectory:
    Type: AWS::DirectoryService::MicrosoftAD
    Properties:
      Name: "threatalert.stackarmor.com"
      Edition: "Standard"
      Password:
        Ref: MicrosoftADPW
      VpcSettings:
        VpcId:
          Ref: ThreatAlertVPC
        SubnetIds:
        - Ref: DirectorySubnet1
        - Ref: DirectorySubnet2
   
  ThreatAlertSSMDoc:
    Type: AWS::SSM::Document
    Properties:
      Content:
        schemaVersion: '1.2'
        description: Join instances to an AWS Directory Service Domain
        runtimeConfig:
          aws:domainJoin:
            properties:
              directoryId: !Ref 'ThreatAlertDirectory'
              directoryName: "threatalert.stackarmor.com"
              dnsIpAddresses:  !GetAtt ThreatAlertDirectory.DnsIpAddresses
    DependsOn: ThreatAlertDirectory
  
  ThreatAlertEIPForNatGateway:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  
  
  ThreatAlertprodNatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt 'ThreatAlertEIPForNatGateway.AllocationId'
      SubnetId: !Ref 'ThreatAlertSN1'
      Tags:
        - Key: Name
          Value: ThreatAlert-prod-Nat-Gateway
  ThreatAlertSplunkSG:
    Type: AWS::EC2::SecurityGroup
    DependsOn: RemoteDesktopGatewaySG
    Properties:
      GroupDescription: Splunk Base Security Group
      GroupName: ThreatAlertSplunkSG
      VpcId: !Ref 'ThreatAlertVPC'
      Tags:
        - Key: Name
          Value: ThreatAlert-splunk-sg
      SecurityGroupIngress:
        - IpProtocol: tcp
          SourceSecurityGroupId: !Ref 'RemoteDesktopGatewaySG'
          FromPort: '22'
          ToPort: '22'
        - IpProtocol: tcp
          SourceSecurityGroupId: !Ref 'RemoteDesktopGatewaySG'
          FromPort: '8000'
          ToPort: '8000'

  OpsAlertSG:
    Type: AWS::EC2::SecurityGroup
    DependsOn: RemoteDesktopGatewaySG
    Properties:
      GroupDescription: Splunk Base Security Group
      GroupName: OpsAlertSG
      VpcId: !Ref 'ThreatAlertVPC'
      Tags:
        - Key: Name
          Value: OpsAlert-sg
      SecurityGroupIngress:
        - IpProtocol: tcp
          SourceSecurityGroupId: !Ref 'RemoteDesktopGatewaySG'
          FromPort: '22'
          ToPort: '22'
        - IpProtocol: tcp
          SourceSecurityGroupId: !Ref 'RemoteDesktopGatewaySG'
          FromPort: '80'
          ToPort: '80'

  ThreatAlertSG:
    Type: AWS::EC2::SecurityGroup
    DependsOn: RemoteDesktopGatewaySG
    Properties:
      GroupDescription: Splunk Base Security Group
      GroupName: ThreatAlertSecurityGroup
      VpcId: !Ref 'ThreatAlertVPC'
      Tags:
        - Key: Name
          Value: ThreatAlert-sg
      SecurityGroupIngress:
        - IpProtocol: tcp
          SourceSecurityGroupId: !Ref 'RemoteDesktopGatewaySG'
          FromPort: '22'
          ToPort: '22'
        - IpProtocol: tcp
          SourceSecurityGroupId: !Ref 'RemoteDesktopGatewaySG'
          FromPort: '443'
          ToPort: '443'

  RapidSSPSG:
    Type: AWS::EC2::SecurityGroup
    DependsOn: RemoteDesktopGatewaySG
    Properties:
      GroupDescription: Splunk Base Security Group
      GroupName: RapidSSPSecurityGroup
      VpcId: !Ref 'ThreatAlertVPC'
      Tags:
        - Key: Name
          Value: ThreatAlert-sg
      SecurityGroupIngress:
        - IpProtocol: tcp
          SourceSecurityGroupId: !Ref 'RemoteDesktopGatewaySG'
          FromPort: '22'
          ToPort: '22'
        - IpProtocol: tcp
          SourceSecurityGroupId: !Ref 'RemoteDesktopGatewaySG'
          FromPort: '443'
          ToPort: '443'

  ThreatAlertSplunkEC2Role:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: ThreatAlertSplunkEC2Role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Policies:
        - PolicyName: sata-splunk-ec2-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sqs:GetQueueAttributes
                  - sqs:ListQueues
                  - sqs:ReceiveMessage
                  - sqs:GetQueueUrl
                  - sqs:SendMessage
                  - sqs:DeleteMessage
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:GetBucketLocation
                  - s3:ListAllMyBuckets
                  - s3:GetBucketTagging
                  - s3:GetAccelerateConfiguration
                  - s3:GetBucketLogging
                  - s3:GetLifecycleConfiguration
                  - s3:GetBucketCORS
                  - config:DeliverConfigSnapshot
                  - config:DescribeConfigRules
                  - config:DescribeConfigRuleEvaluationStatus
                  - config:GetComplianceDetailsByConfigRule
                  - config:GetComplianceSummaryByConfigRule
                  - iam:GetUser
                  - iam:ListUsers
                  - iam:GetAccountPasswordPolicy
                  - iam:ListAccessKeys
                  - iam:GetAccessKeyLastUsed
                  - autoscaling:Describe*
                  - cloudwatch:Describe*
                  - cloudwatch:Get*
                  - cloudwatch:List*
                  - sns:Get*
                  - sns:List*
                  - sns:Publish
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:GetLogEvents
                  - ec2:DescribeInstances
                  - ec2:DescribeReservedInstances
                  - ec2:DescribeSnapshots
                  - ec2:DescribeRegions
                  - ec2:DescribeKeyPairs
                  - ec2:DescribeNetworkAcls
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeSubnets
                  - ec2:DescribeVolumes
                  - ec2:DescribeVpcs
                  - ec2:DescribeImages
                  - ec2:DescribeAddresses
                  - lambda:ListFunctions
                  - rds:DescribeDBInstances
                  - cloudfront:ListDistributions
                  - elasticloadbalancing:DescribeLoadBalancers
                  - elasticloadbalancing:DescribeInstanceHealth
                  - elasticloadbalancing:DescribeTags
                  - elasticloadbalancing:DescribeTargetGroups
                  - elasticloadbalancing:DescribeTargetHealth
                  - elasticloadbalancing:DescribeListeners
                  - inspector:Describe*
                  - inspector:List*
                  - kinesis:Get*
                  - kinesis:DescribeStream
                  - kinesis:ListStreams
                  - kms:Decrypt
                  - sts:AssumeRole
                Resource:
                  - '*'
  ThreatAlertRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: !FindInMap
                - Region2Principal
                - !Ref 'AWS::Region'
                - EC2Principal
            Action:
              - sts:AssumeRole
      Path: /
      RoleName: ThreatAlertRole
  ThreatRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: sa-ThreatAlertPolicy
      PolicyDocument:
        Statement:
          - Action:
              - acm:describecertificate
              - acm:listcertificates
              - cloudtrail:DescribeTrails
              - cloudtrail:GetTrailStatus
              - cloudtrail:LookupEvents
              - config:describeconfigrules
              - config:describeconfigurationrecorders
              - directconnect:describeconnections
              - ec2:describeaddresses
              - ec2:describedhcpoptions
              - ec2:describeflowlogs
              - ec2:describeimages
              - ec2:describeinstances
              - ec2:describeinternetgateways
              - ec2:describekeypairs
              - ec2:describenatgateways
              - ec2:describenetworkacls
              - ec2:describenetworkinterfaces
              - ec2:describeregions
              - ec2:describeroutetables
              - ec2:describesecuritygroups
              - ec2:describesnapshots
              - ec2:DescribeSnapshotAttribute
              - ec2:describesubnets
              - ec2:describetags
              - ec2:describevolumes
              - ec2:describevpcendpoints
              - ec2:describevpcpeeringconnections
              - ec2:describevpcs
              - ec2:describevpnconnections
              - ec2:describevpngateways
              - elasticloadbalancing:describeloadbalancerattributes
              - elasticloadbalancing:describeloadbalancerpolicies
              - elasticloadbalancing:describeloadbalancers
              - elasticloadbalancing:describelisteners
              - elasticloadbalancing:describerules
              - elasticloadbalancing:describesslpolicies
              - elasticloadbalancing:describetags
              - elasticloadbalancing:describetargetgroups
              - elasticloadbalancing:describetargetgroupattributes
              - elasticloadbalancing:describetargethealth
              - es:describeelasticsearchdomainconfig
              - es:listdomainnames
              - glacier:DescribeVault
              - glacier:GetVaultAccessPolicy
              - glacier:ListTagsForVault
              - glacier:ListVaults
              - iam:GetAccountPasswordPolicy
              - iam:getaccesskeylastused
              - iam:getgroup
              - iam:getgrouppolicy
              - iam:getloginprofile
              - iam:getpolicyversion
              - iam:getrole
              - iam:getrolepolicy
              - iam:GetSAMLProvider
              - iam:getservercertificate
              - iam:getuser
              - iam:getuserpolicy
              - iam:listaccesskeys
              - iam:listattachedgrouppolicies
              - iam:listattachedrolepolicies
              - iam:listattacheduserpolicies
              - iam:listentitiesforpolicy
              - iam:listgrouppolicies
              - iam:listgroups
              - iam:listinstanceprofilesforrole
              - iam:listmfadevices
              - iam:listpolicies
              - iam:listrolepolicies
              - iam:listroles
              - iam:listsamlproviders
              - iam:listservercertificates
              - iam:listsigningcertificates
              - iam:listuserpolicies
              - iam:listusers
              - kms:describekey
              - kms:getkeypolicy
              - kms:getkeyrotationstatus
              - kms:listaliases
              - kms:listgrants
              - kms:listkeypolicies
              - kms:listkeys
              - lambda:getfunctionconfiguration
              - lambda:getpolicy
              - lambda:listaliases
              - lambda:listeventsourcemappings
              - lambda:listtags
              - lambda:listversionsbyfunction
              - lambda:listfunctions
              - rds:describedbclusters
              - rds:describedbclustersnapshots
              - rds:describedbinstances
              - rds:describedbsecuritygroups
              - rds:describedbsnapshots
              - rds:describedbsnapshotattributes
              - rds:describedbsubnetgroups
              - redshift:describeclusters
              - route53:listhostedzones
              - route53:listresourcerecordsets
              - route53domains:listdomains
              - route53domains:getdomaindetail
              - s3:getaccelerateconfiguration
              - s3:getbucketacl
              - s3:getbucketcors
              - s3:getbucketlocation
              - s3:getbucketlogging
              - s3:getbucketnotification
              - s3:getbucketpolicy
              - s3:getbuckettagging
              - s3:getbucketversioning
              - s3:getbucketwebsite
              - s3:getlifecycleconfiguration
              - s3:listbucket
              - s3:listallmybuckets
              - s3:getreplicationconfiguration
              - s3:getanalyticsconfiguration
              - s3:getmetricsconfiguration
              - s3:getinventoryconfiguration
              - ses:getidentityverificationattributes
              - ses:listidentities
              - ses:listverifiedemailaddresses
              - ses:sendemail
              - sns:gettopicattributes
              - sns:listsubscriptionsbytopic
              - sns:listtopics
              - sqs:getqueueattributes
              - sqs:listqueues
            Effect: Allow
            Resource: '*'
      Roles:
        - !Ref 'ThreatAlertRole'
  ThreatAlertSplunkInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref 'ThreatAlertSplunkEC2Role'

  ThreatAlertGSSInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref 'ThreatAlertEC2Role'
      InstanceProfileName: ThreatAlertGSSInstanceProfile
    DependsOn: ThreatAlertEC2Role

  ThreatAlertEC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      RoleName: ThreatAlertEC2Role

  ThreatAlertScanner:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: !FindInMap
                - Region2Principal
                - !Ref 'AWS::Region'
                - EC2Principal
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:role/ThreatAlertEC2Role'
            Action:
              - sts:AssumeRole
      Path: /
      RoleName: ThreatAlertScanner
    DependsOn: ThreatAlertEC2Role

  ThreatRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: sa-ThreatAlertPolicy
      PolicyDocument:
        Statement:
          - Action:
              - acm:describecertificate
              - acm:listcertificates
              - cloudtrail:DescribeTrails
              - cloudtrail:GetTrailStatus
              - cloudtrail:LookupEvents
              - config:describeconfigrules
              - config:describeconfigurationrecorders
              - directconnect:describeconnections
              - ec2:describeaddresses
              - ec2:describedhcpoptions
              - ec2:describeflowlogs
              - ec2:describeimages
              - ec2:describeinstances
              - ec2:describeinternetgateways
              - ec2:describekeypairs
              - ec2:describenatgateways
              - ec2:describenetworkacls
              - ec2:describenetworkinterfaces
              - ec2:describeregions
              - ec2:describeroutetables
              - ec2:describesecuritygroups
              - ec2:describesnapshots
              - ec2:DescribeSnapshotAttribute
              - ec2:describesubnets
              - ec2:describetags
              - ec2:describevolumes
              - ec2:describevpcendpoints
              - ec2:describevpcpeeringconnections
              - ec2:describevpcs
              - ec2:describevpnconnections
              - ec2:describevpngateways
              - elasticloadbalancing:describeloadbalancerattributes
              - elasticloadbalancing:describeloadbalancerpolicies
              - elasticloadbalancing:describeloadbalancers
              - elasticloadbalancing:describelisteners
              - elasticloadbalancing:describerules
              - elasticloadbalancing:describesslpolicies
              - elasticloadbalancing:describetags
              - elasticloadbalancing:describetargetgroups
              - elasticloadbalancing:describetargetgroupattributes
              - elasticloadbalancing:describetargethealth
              - es:describeelasticsearchdomainconfig
              - es:listdomainnames
              - glacier:DescribeVault
              - glacier:GetVaultAccessPolicy
              - glacier:ListTagsForVault
              - glacier:ListVaults
              - iam:GetAccountPasswordPolicy
              - iam:getaccesskeylastused
              - iam:getgroup
              - iam:getgrouppolicy
              - iam:getloginprofile
              - iam:getpolicyversion
              - iam:getrole
              - iam:getrolepolicy
              - iam:GetSAMLProvider
              - iam:getservercertificate
              - iam:getuser
              - iam:getuserpolicy
              - iam:listaccesskeys
              - iam:listattachedgrouppolicies
              - iam:listattachedrolepolicies
              - iam:listattacheduserpolicies
              - iam:listentitiesforpolicy
              - iam:listgrouppolicies
              - iam:listgroups
              - iam:listinstanceprofilesforrole
              - iam:listmfadevices
              - iam:listpolicies
              - iam:listrolepolicies
              - iam:listroles
              - iam:listsamlproviders
              - iam:listservercertificates
              - iam:listsigningcertificates
              - iam:listuserpolicies
              - iam:listusers
              - kms:describekey
              - kms:getkeypolicy
              - kms:getkeyrotationstatus
              - kms:listaliases
              - kms:listgrants
              - kms:listkeypolicies
              - kms:listkeys
              - lambda:getfunctionconfiguration
              - lambda:getpolicy
              - lambda:listaliases
              - lambda:listeventsourcemappings
              - lambda:listtags
              - lambda:listversionsbyfunction
              - lambda:listfunctions
              - rds:describedbclusters
              - rds:describedbclustersnapshots
              - rds:describedbinstances
              - rds:describedbsecuritygroups
              - rds:describedbsnapshots
              - rds:describedbsnapshotattributes
              - rds:describedbsubnetgroups
              - redshift:describeclusters
              - route53:listhostedzones
              - route53:listresourcerecordsets
              - route53domains:listdomains
              - route53domains:getdomaindetail
              - s3:getaccelerateconfiguration
              - s3:getbucketacl
              - s3:getbucketcors
              - s3:getbucketlocation
              - s3:getbucketlogging
              - s3:getbucketnotification
              - s3:getbucketpolicy
              - s3:getbuckettagging
              - s3:getbucketversioning
              - s3:getbucketwebsite
              - s3:getlifecycleconfiguration
              - s3:listbucket
              - s3:listallmybuckets
              - s3:getreplicationconfiguration
              - s3:getanalyticsconfiguration
              - s3:getmetricsconfiguration
              - s3:getinventoryconfiguration
              - ses:getidentityverificationattributes
              - ses:listidentities
              - ses:listverifiedemailaddresses
              - ses:sendemail
              - sns:gettopicattributes
              - sns:listsubscriptionsbytopic
              - sns:listtopics
              - sqs:getqueueattributes
              - sqs:listqueues
            Effect: Allow
            Resource: '*'
      Roles:
        - !Ref 'ThreatAlertScanner'

  ThreatAlertGSSProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref 'ThreatAlertRole'
      InstanceProfileName: ThreatAlertGSSProfile
  ThreatAlertSplunkServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref 'SplunkAMI'
      IamInstanceProfile: !Ref 'ThreatAlertSplunkInstanceProfile'
      InstanceType: !Ref 'SplunkInstanceType'
      KeyName: !Ref 'KeyPair'
      SecurityGroupIds:
        - !Ref 'ThreatAlertSplunkSG'
      Tags:
        - Key: Name
          Value: ThreatAlert-Splunk-Server
      SubnetId: !Ref 'ThreatAlertSN1'

  SonarQubeSG:
    Type: AWS::EC2::SecurityGroup
    DependsOn: RemoteDesktopGatewaySG
    Properties:
      GroupDescription: SonarQube Security Group
      GroupName: SonarQubeSG
      VpcId: !Ref 'ThreatAlertVPC'
      Tags:
        - Key: Name
          Value: ThreatAlert-SonarQube-SG
      SecurityGroupIngress:
        - IpProtocol: tcp
          SourceSecurityGroupId: !Ref 'RemoteDesktopGatewaySG'
          FromPort: '22'
          ToPort: '22'
        - IpProtocol: tcp
          SourceSecurityGroupId: !Ref 'RemoteDesktopGatewaySG'
          FromPort: '9000'
          ToPort: '9000'

  SonarQubeServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref 'SonarQubeAMI'
      InstanceType: !Ref 'SonarQubeInstanceType'
      KeyName: !Ref 'KeyPair'
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - Ref: "SonarQubeSG"
          SubnetId:
            Ref: 'ThreatAlertSubnetSelection'
      Tags:
        - Key: Name
          Value: SonarQube-Server

  ThreatAlertServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref 'ThreatAlertAMI'
      InstanceType: !Ref 'ThreatAlertInstanceType'
      SsmAssociations: 
        -
          DocumentName: 
            Ref: "ThreatAlertSSMDoc" 
      KeyName: !Ref 'KeyPair'
      IamInstanceProfile: !Ref 'ThreatAlertGSSInstanceProfile'
      SecurityGroupIds:
        - !Ref 'ThreatAlertSG'
      SubnetId: !Ref 'ThreatAlertSubnetSelection'
      Tags:
        - Key: Name
          Value: ThreatAlert-Server
    DependsOn: ThreatAlertSSMDoc
      

  OpsAlertServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref 'OpsAlertAMI'
      InstanceType: !Ref 'OpsAlertInstanceType'
      KeyName: !Ref 'KeyPair'
      IamInstanceProfile: !Ref 'ThreatAlertGSSProfile'
      SecurityGroupIds:
        - !Ref 'OpsAlertSG'
      SubnetId: !Ref 'ThreatAlertSubnetSelection'
      Tags:
        - Key: Name
          Value: OpsAlert-Server

  RapidSSPServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref 'RapidSSPAMI'
      InstanceType: !Ref 'RapidSSPInstanceType'
      KeyName: !Ref 'KeyPair'
      IamInstanceProfile: !Ref 'ThreatAlertGSSProfile'
      SecurityGroupIds:
        - !Ref 'RapidSSPSG'
      SubnetId: !Ref 'ThreatAlertSubnetSelection'
      Tags:
        - Key: Name
          Value: RapidSSP-Server

  DSMMaster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Sub:
        - https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${DSMS3KeyPrefix}templates/quickstart/trendmicro-deepsecurity-master.template
        - QSS3Region:
            !If
            - GovCloudCondition
            - s3-us-gov-west-1
            - s3
      Parameters:
        AWSKeyPairName: !Ref KeyPair
        AWSVPC: !Ref ThreatAlertVPC
        DeepSecuritySubnet: !Ref ThreatAlertSN1
        DeepSecurityAdminName: !Ref DSMAdminName
        DeepSecurityAdminPass: !Ref DSMAdminPass
        DatabaseSubnet1: !Ref DBISubnet1
        DatabaseSubnet2: !Ref DBISubnet2
        ProtectedInstances: !Ref DSMProtectedInstances
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref DSMS3KeyPrefix


  RecoveryAlarmThreatAlert:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Trigger a recovery when instance status check fails for 15
        consecutive minutes.
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Minimum
      Period: '60'
      EvaluationPeriods: '15'
      ComparisonOperator: GreaterThanThreshold
      Threshold: '0'
      AlarmActions: [ !Sub "arn:aws:automate:${AWS::Region}:ec2:recover" ]
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: ThreatAlertServer
  
  RecoveryAlarmOpsAlert:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Trigger a recovery when instance status check fails for 15
        consecutive minutes.
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Minimum
      Period: '60'
      EvaluationPeriods: '15'
      ComparisonOperator: GreaterThanThreshold
      Threshold: '0'
      AlarmActions: [ !Sub "arn:aws:automate:${AWS::Region}:ec2:recover" ]
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: OpsAlertServer

  RecoveryAlarmRapidSSP:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Trigger a recovery when instance status check fails for 15
        consecutive minutes.
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Minimum
      Period: '60'
      EvaluationPeriods: '15'
      ComparisonOperator: GreaterThanThreshold
      Threshold: '0'
      AlarmActions: [ !Sub "arn:aws:automate:${AWS::Region}:ec2:recover" ]
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: RapidSSPServer
  
  RecoveryAlarmBastion:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Trigger a recovery when instance status check fails for 15
        consecutive minutes.
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Minimum
      Period: '60'
      EvaluationPeriods: '15'
      ComparisonOperator: GreaterThanThreshold
      Threshold: '0'
      AlarmActions: [ !Sub "arn:aws:automate:${AWS::Region}:ec2:recover" ]
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: BastionServer
  
  RecoveryAlarmSonarQube:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Trigger a recovery when instance status check fails for 15
        consecutive minutes.
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Minimum
      Period: '60'
      EvaluationPeriods: '15'
      ComparisonOperator: GreaterThanThreshold
      Threshold: '0'
      AlarmActions: [ !Sub "arn:aws:automate:${AWS::Region}:ec2:recover" ]
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: SonarQubeServer


  RecoveryAlarmSplunk:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Trigger a recovery when instance status check fails for 15
        consecutive minutes.
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Minimum
      Period: '60'
      EvaluationPeriods: '15'
      ComparisonOperator: GreaterThanThreshold
      Threshold: '0'
      AlarmActions: [ !Sub "arn:aws:automate:${AWS::Region}:ec2:recover" ]
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: ThreatAlertSplunkServer

  CPUAlarmThreatAlert:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: CPU alarm for my instance
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '3'
      Threshold: '90'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: ThreatAlertServer

  CPUAlarmOpsAlert:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: CPU alarm for my instance
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '3'
      Threshold: '90'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: OpsAlertServer


  CPUAlarmBastion:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: CPU alarm for my instance
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '3'
      Threshold: '90'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: BastionServer

  CPUAlarmRapidSSP:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: CPU alarm for my instance
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '3'
      Threshold: '90'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: RapidSSPServer

  CPUAlarmSplunk:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: CPU alarm for my instance
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '3'
      Threshold: '90'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: ThreatAlertSplunkServer

  
  CPUAlarmSonarQube:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: CPU alarm for my instance
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '3'
      Threshold: '90'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: SonarQubeServer


  EnableGuardduty: 
    Type: AWS::GuardDuty::Detector
    Properties: 
      Enable: True
