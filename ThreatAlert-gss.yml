AWSTemplateFormatVersion: 2010-09-09
Description: This is a parent template to deploy child templates.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "VPC, Subnets, FedRAMP, and Type of Cloud"
        Parameters:
          - VPCSubnetCidrBlock
          - Classification
          - AvailabilityZones
          - NumberOfAZs
          - SubnetCidrBlock1
          - SubnetCidrBlock2
          - AppsSubnet1
          - AppsSubnet2
          - DSSubnet1
          - DSSubnet2
          - RDGWCIDR
      -
        Label:
          default: "KeyPair and Buckets name "
        Parameters:
          - KeyPair
          - TAS3BucketName
          - GTAS3BucketName
      -
        Label:
          default: "Domains and Directory Service"
        Parameters:
          - DomainAdminUser
          - DomainAdminPassword
          - MicrosoftADPW
          - DomainDNSName
          - DomainNetBIOSName
      -
        Label:
          default: "Instances Type"
        Parameters:
          - RDGWInstanceType
          - ThreatAlertInstanceType
          - OpsAlertInstanceType
          - OktaInstanceType
          - JiraInstanceType
          - AcunetixInstanceType
          - BastionInstanceType
          - SonarQubeInstanceType
          - SplunkInstanceType
          - NessusInstanceType
      -
        Label:
          default: "Palo Alto Parameters"
        Parameters:
          - VPCAZPalo
          - VPCPalo
          - VPCCIDRPalo
          - SSHLocationP
          - MgmtSubnetIpBlocksP
          - UntrustSubnetIpBlocksP
          - TrustSubnetIpBlocksP
          - VPNSubnetIpBlocksP
          - NATGWSubnetIpBlocksP
          - FWInstanceTypeP
          - S3BucketNameP
      -
        Label:
          default: "TrendMicro Parameters"
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
          - DSMS3KeyPrefix
          - DSMAdminName
          - DSMAdminPass    
          - DSMProtectedInstances

Parameters:

  VPCSubnetCidrBlock:
    Description: Enter VPC CIDR Block.
    Type: String
    Default: 10.0.0.0/24
    MinLength: '10'
    MaxLength: '18'

  Classification:
    Description: Enter Classification level
    Type: String
    Default: FedRAMP-Moderate
    AllowedValues: 
      - Not-FedRamp
      - FedRAMP-Low
      - FedRAMP-Moderate
      - FedRAMP-High

  AvailabilityZones:
    Description: 'List of Availability Zones to use for the subnets in the VPC. Note:
        The logical order is preserved.'
    Type: List<AWS::EC2::AvailabilityZone::Name>

  DomainAdminPassword:
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    Description: Password for the domain admin user. Must be at least 8 characters
      containing letters, numbers and symbols
    MaxLength: '32'
    MinLength: '8'
    NoEcho: 'true'
    Type: String

  DomainAdminUser:
    AllowedPattern: '[a-zA-Z0-9]*'
    Default: StackAdmin
    Description: User name for the Domain Administrator. This is separate from the
      default "Administrator" account
    MaxLength: '25'
    MinLength: '5'
    Type: String

  DomainDNSName:
    Description: Fully qualified domain name (FQDN) e.g. threatalert.stackarmor.com
    Type: String
    Default: threatalert.stackarmor.com
    MinLength: '2'
    MaxLength: '255'
    AllowedPattern: '[a-zA-Z0-9\-]+\..+'

  DomainNetBIOSName:
    AllowedPattern: '[a-zA-Z0-9\-]+'
    Default: example
    Description: NetBIOS name of the domain (up to 15 characters) for users of earlier
      versions of Windows e.g. EXAMPLE
    MaxLength: '15'
    MinLength: '1'
    Type: String

  RDGWInstanceType:
    Description: Amazon EC2 instance type for the Remote Desktop Gateway instances
    Type: String
    Default: t2.large
    AllowedValues:
      - t2.large
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge

  NumberOfAZs:
    AllowedValues:
      - '2'
      - '3'
      - '4'
    Default: '2'
    Description: Number of Availability Zones to use in the VPC. This must match your
      selections in the list of Availability Zones parameter.
    Type: String

  SubnetCidrBlock1:
    Description: Enter Public Subnet 1 CIDR Block.
    Type: String
    Default: 10.0.0.0/26
    MinLength: '10'
    MaxLength: '18'

  SubnetCidrBlock2:
    Description: Enter Private Subnet 1 CIDR Block.
    Type: String
    Default: 10.0.0.64/26
    MinLength: '10'
    MaxLength: '18'

  AppsSubnet1:
    Description: Select a private subnet for the applications.  Must be a private
      subnet contained the in VPC chosen above.
    Type: String
    Default: 10.0.0.128/27
    MinLength: '10'
    MaxLength: '18'
    ConstraintDescription: RDS Subnet Groups must be comprised of 2 subnets in seperate
      availability zones within the specified VPC for deploying this template

  AppsSubnet2:
    Description: Select a second private subnet for the applications.  Must be a private
      subnet contained the in VPC chosen above.
    Type: String
    Default: 10.0.0.160/27
    MinLength: '10'
    MaxLength: '18'
    ConstraintDescription: RDS Subnet Groups must be comprised of 2 subnets in seperate availability zones within the specified VPC for deploying this template

  DSSubnet1:
    Description: Select a private subnet for the RDS database.  Must be a private
      subnet contained the in VPC chosen above. 
    Type: String
    Default: 10.0.0.192/27
    MinLength: '10'
    MaxLength: '18'
    ConstraintDescription: Directory Service Subnet Group must be comprised of 2 subnets in seperate
      availability zones within the specified VPC for deploying this template
  DSSubnet2:
    Description: Select a second private subnet for the RDS database.  Must be a private
      subnet contained the in VPC chosen above.
    Type: String
    Default: 10.0.0.224/27
    MinLength: '10'
    MaxLength: '18'
    ConstraintDescription: Directory Service Subnet Group must be comprised of 2 subnets in seperate availability zones within the specified VPC for deploying this template




  OktaInstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.large	
    AllowedValues: 
      - t2.large	
      - t3a.large
      - t3.large
      - m5ad.large
      - m5a.large
      - m5d.large
      - m5n.large
      - m5dn.large
      - m5ad.xlarge
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large

  JiraInstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
    ConstraintDescription: must be a valid EC2 instance type.

  AcunetixInstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
    ConstraintDescription: must be a valid EC2 instance type.


  ThreatAlertInstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
    ConstraintDescription: must be a valid EC2 instance type.

  BastionInstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.medium
    AllowedValues:
      - t2.micro
      - t2.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
    ConstraintDescription: must be a valid EC2 instance type.

  OpsAlertInstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
    ConstraintDescription: must be a valid EC2 instance type.

  SonarQubeInstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
    ConstraintDescription: must be a valid EC2 instance type.

  SplunkInstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
    ConstraintDescription: must be a valid EC2 instance type.

  NessusInstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
    ConstraintDescription: must be a valid EC2 instance type.

  MicrosoftADPW:
    NoEcho: true
    Description: The database password for Directory Service
    Type: String
    MinLength: 1
    MaxLength: 41
    AllowedPattern: ^[a-zA-Z0-9]*$

  KeyPair:
    Description: EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName

  RDGWCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: Allowed CIDR Block for external access to the Remote Desktop Gateways
    Type: String


  TAS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: threatalertgss
    Description: S3 bucket name ThreatAlert, Splunk, and SGs stack
    Type: String  

  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart 
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-microsoft-rdgateway/  
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  DSMS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-trendmicro-deepsecurity/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  DSMAdminName:
    Default: MasterAdmin
    Description: The Deep Security Manager administrator username for Web Console
      Access.
    Type: String
    MinLength: 1
    MaxLength: 16
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and contain only alphanumeric
      characters. Min length 1, max length 16
  DSMAdminPass:
    NoEcho: true
    Description: The Deep Security Manager administrator password. Must be 8-41 characters
      long and can only contain alphanumeric characters or the following special characters
      !^*-_+
    Type: String
    MinLength: 8
    MaxLength: 41
    AllowedPattern: '[a-zA-Z0-9!^*\-_+]*'
    ConstraintDescription: Can only contain alphanumeric characters or the following
      special characters !^*-_+ Min length 8, max length 41
  DSMProtectedInstances:
    Description: Select how many instances would you like to protect.
    Type: String
    AllowedValues:
    - 1-100
    - 101-500
    - 501-1000
    - 1001-2000

  VPCAZPalo:
    Description: Choose an Availability Zone for Palo Alto
    Type: AWS::EC2::AvailabilityZone::Name

  VPCPalo: 
    Description: Name of the newly created VPC
    Type: String
    MinLength: '6'
    MaxLength: '75'
    Default: network-access-vpc

  VPCCIDRPalo:
    Type: String
    Default: 10.0.1.0/24
    Description: Enter the VPC CIDR that you want to use. Suggestion use a /22-24. DO NOT USE 192.168.255.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
  SSHLocationP:
    Description: Enter your current public IP.  This is what will be whitelisted for HTTPS and SSH access to MGMT Interface. Use /32.
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: '0.0.0.0/0'
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.    
  MgmtSubnetIpBlocksP:
    Description: Management subnet CIDR block. Please use /28
    Type: String
    Default: 10.0.1.0/28
  UntrustSubnetIpBlocksP:
    Description: Untrust subnet CIDR block. Please use /28
    Type: String
    Default: 10.0.1.16/28
  TrustSubnetIpBlocksP:
    Description: Trust subnet CIDR block. Please use /28
    Type: String
    Default: 10.0.1.32/28
  VPNSubnetIpBlocksP:
    Description: VPN interface CIDR block. Please use /28
    Type: String
    Default: 10.0.1.48/28
  NATGWSubnetIpBlocksP:
    Description: AWS NAT Gateway Subnet CIDR block. Please use /28
    Type: String
    Default: 10.0.1.64/28
  FWInstanceTypeP:
    Type: String
    Default: m4.xlarge
    AllowedValues:
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
    Description: Enter the instance type and size for the VM-Series firewall
  S3BucketNameP:
    Type: String
    Default: stackarmorgov-public-paloaltoconfig-bucket
    Description: Leave as default or if you have your PA configuration, enter the name S3 Bucket Name containing the Bootstrap files
    MinLength: '3'
    MaxLength: '120'

Mappings:
  ThreatAlertAMIRegionMap:
    us-east-1:
      ThreatAlertAMI: ami-042079a2848d953d1
    us-east-2:
      ThreatAlertAMI: ami-08b4a0f6e106c1dba
    us-west-1:
      ThreatAlertAMI: ami-0f825806081c4725c
    us-west-2:
      ThreatAlertAMI: ami-0af80d239cc063c12
    us-gov-west-1:
      ThreatAlertAMI: ami-ed567a8c   
    us-gov-east-1:
      ThreatAlertAMI: ami-0545dddb3700a2cc7

  SplunkAMIRegionMap:
    us-east-1:
      SplunkAMI: ami-0641487ca08d872cc
    us-gov-west-1:
      SplunkAMI: ami-33cffd52
    us-gov-east-1:
      SplunkAMI: ami-0eb9f4ddce25393f8
  
  BastionAMIRegionMap:
    us-east-1:
      BastionServerAMI: ami-0117bc94efa99951f
    us-gov-west-1:
      BastionServerAMI: ami-010cdece90c5054d0
    us-gov-east-1:
      BastionServerAMI: ami-07c28b1ee66f56b65


  JiraAMIRegionMap:
    us-east-1:
      JiraAMI: ami-0f88ac0c74658348a
    us-gov-west-1:
      JiraAMI: ami-03b08e4346affe05d
    us-gov-east-1:
      JiraAMI: ami-0832148927a9cd9cf


  AcunetixAMIRegionMap:
    us-east-1:
      AcunetixAMI: ami-0d820e2bd3aeff787
    us-gov-west-1:
      AcunetixAMI: ami-8d9ca1ec
    us-gov-east-1:
      AcunetixAMI: ami-0832148927a9cd9cf

  OpsAlertAMIRegionMap:
    us-east-1:
      OpsAlertAMI: ami-07d81129bc145f691
    us-gov-west-1:
      OpsAlertAMI: ami-62aa8503
    us-gov-east-1:
      OpsAlertAMI: ami-0d01b051a72b4fe7e


  NessusAMIRegionMap:
    us-east-1:
      NessusAMI: ami-05f30952a2b19425f
    us-gov-west-1:
      NessusAMI: ami-15cefc74
    us-gov-east-1:
      NessusAMI: ami-0907e8c38a958dee1

  OktaAMIRegionMap:
    us-east-1:
      OktaAMI: ami-0bbb345ea9f25a858
    us-gov-west-1:
      OktaAMI: ami-36a09d57
    us-gov-east-1: 
      OktaAMI: ami-082c592ccf2cb8803

  SonarQubeAMIRegionMap:
    us-east-1:
      SonarQubeAMI: ami-00dda516525658d9e
    us-gov-west-1:
      SonarQubeAMI: ami-09023a498f9603047
    us-gov-east-1: 
      SonarQubeAMI: ami-0eed0f08d0e4140db


Resources:

  ThreatSplunknSGsStack:
    Type: AWS::CloudFormation::Stack  
    Properties:
      TemplateURL: 
        !Sub 
          - https://${TAS3BucketName}.${QSS3Region}.amazonaws.com/ThreatSplunknSG.yml
          - QSS3Region: !If ["GovCloudCondition", "s3-us-gov-west-1", "s3"]
      Parameters:
        AvailabilityZones: !Join
          - ','
          - !Ref 'AvailabilityZones'
        KeyNameN: !Ref 'KeyPair'
        VPCCidr: !Ref 'VPCSubnetCidrBlock'
        SplunkType: !Ref 'SplunkInstanceType'
        ThreatType: !Ref 'ThreatAlertInstanceType'
        ThreatImage: !FindInMap [ThreatAlertAMIRegionMap, !Ref "AWS::Region", ThreatAlertAMI]
        SplunkImage: !FindInMap [SplunkAMIRegionMap, !Ref "AWS::Region", SplunkAMI]
        BastionImage: !FindInMap [BastionAMIRegionMap, !Ref "AWS::Region", BastionServerAMI]
        BastionType: !Ref BastionInstanceType
        CidrBlock1: !Ref 'SubnetCidrBlock1'
        CidrBlock2: !Ref 'SubnetCidrBlock2'
        MicroADPW: !Ref 'MicrosoftADPW'
        DataSubnet1: !Ref 'AppsSubnet1'
        DataSubnet2: !Ref 'AppsSubnet2'
        RemGate: !Ref 'RDGWCIDR'
        DSSubnetOne: !Ref 'DSSubnet1'
        DSSubnetTwo: !Ref 'DSSubnet2'
        FedClassification: !Ref Classification
        DomainDNSName: !Ref DomainDNSName
            
  DSMMaster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Sub:
        - https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${DSMS3KeyPrefix}templates/quickstart/trendmicro-deepsecurity-master.template
        - QSS3Region:
            !If
            - GovCloudCondition
            - s3-us-gov-west-1
            - s3
      Parameters:
        AWSKeyPairName: !Ref KeyPair
        AWSVPC: !GetAtt ThreatSplunknSGsStack.Outputs.ThreatAlertVPC
        DeepSecuritySubnet: !GetAtt ThreatSplunknSGsStack.Outputs.ThreatAlertSN1
        DeepSecurityAdminName: !Ref DSMAdminName
        DeepSecurityAdminPass: !Ref DSMAdminPass
        DatabaseSubnet1: !GetAtt ThreatSplunknSGsStack.Outputs.DirectorySubnet1
        DatabaseSubnet2: !GetAtt ThreatSplunknSGsStack.Outputs.DirectorySubnet2
        ProtectedInstances: !Ref DSMProtectedInstances
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref DSMS3KeyPrefix

  PaloAltoStack:
    Type: AWS::CloudFormation::Stack  
    Properties:
      TemplateURL: 
        !Sub 
          - 'https://${TAS3BucketName}.${QSS3Region}.amazonaws.com/PaloAlto.yml'
          - QSS3Region: !If ["GovCloudCondition", "s3-us-gov-west-1", "s3"]
      Parameters:
        VpcAz: !Ref 'VPCAZPalo'
        KeyName: !Ref 'KeyPair'    
        VPCName: !Ref 'VPCPalo'
        VPCCIDR: !Ref 'VPCCIDRPalo'
        SSHLocation: !Ref 'SSHLocationP'
        MgmtSubnetIpBlocks: !Ref 'MgmtSubnetIpBlocksP'
        UntrustSubnetIpBlocks: !Ref 'UntrustSubnetIpBlocksP'
        TrustSubnetIpBlocks: !Ref 'TrustSubnetIpBlocksP'
        VPNSubnetIpBlocks: !Ref 'VPNSubnetIpBlocksP'
        NATGWSubnetIpBlocks: !Ref 'NATGWSubnetIpBlocksP'
        FWInstanceType: !Ref 'FWInstanceTypeP'
        S3BucketName: !Ref 'S3BucketNameP'

  TASecurityServersStack:
    Type: AWS::CloudFormation::Stack 
    Properties:
      TemplateURL: 
        !Sub 
          - 'https://${TAS3BucketName}.${QSS3Region}.amazonaws.com/TASecurityServers.yml'
          - QSS3Region: !If ["GovCloudCondition", "s3-us-gov-west-1", "s3"]
      Parameters: 
        AvailabilityZones: !Join
          - ','
          - !Ref 'AvailabilityZones'      
        SonarAMI: !FindInMap [SonarQubeAMIRegionMap, !Ref "AWS::Region", SonarQubeAMI] 
        SonarType: !Ref SonarQubeInstanceType
        VPCCidr: !Ref 'VPCSubnetCidrBlock'
        OpsAMI: !FindInMap [OpsAlertAMIRegionMap, !Ref "AWS::Region", OpsAlertAMI]
        OpsType: !Ref OpsAlertInstanceType
        KeyNameN: !Ref 'KeyPair'
        NessusAMIP: !FindInMap [NessusAMIRegionMap, !Ref "AWS::Region", NessusAMI]
        NessusType: !Ref NessusInstanceType
        SonarQubeSG: !GetAtt ThreatSplunknSGsStack.Outputs.SonarQubeSG
        OpsAlertSG: !GetAtt ThreatSplunknSGsStack.Outputs.OpsAlertSG
        NessusSG: !GetAtt ThreatSplunknSGsStack.Outputs.NessusSG
        OktaSG: !GetAtt ThreatSplunknSGsStack.Outputs.OktaSG
        JiraSG: !GetAtt ThreatSplunknSGsStack.Outputs.JiraSG
        AcunetixSG: !GetAtt ThreatSplunknSGsStack.Outputs.AcunetixSG
        DBISubnet1: !GetAtt ThreatSplunknSGsStack.Outputs.DBISubnet1
        DBISubnet2: !GetAtt ThreatSplunknSGsStack.Outputs.DBISubnet2 
        JiraAMIP: !FindInMap [JiraAMIRegionMap, !Ref "AWS::Region", JiraAMI] 
        JiraType: !Ref JiraInstanceType
        OktaAMIP: !FindInMap [OktaAMIRegionMap, !Ref "AWS::Region", OktaAMI] 
        OktaType: !Ref OktaInstanceType
        AcunetixAMIP: !FindInMap [AcunetixAMIRegionMap, !Ref "AWS::Region", AcunetixAMI] 
        AcunetixType: !Ref AcunetixInstanceType
        ThreatAlertGSSProfile: !GetAtt ThreatSplunknSGsStack.Outputs.ThreatAlertGSSProfile
        ThreatAlertSubnetSelection: 
          !GetAtt ThreatSplunknSGsStack.Outputs.ThreatAlertSubnetSelection


Conditions:
  
  GovCloudCondition: !Equals [!Ref 'AWS::Region', us-gov-west-1]
